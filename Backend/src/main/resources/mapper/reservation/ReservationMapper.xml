<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.wikibook.backend.reservation.mapper.ReservationMapper">

    <!-- 합주실 목록 조회 -->
    <select id="getAllReservations" resultType="kr.co.wikibook.backend.reservation.model.Reservation">
        SELECT
        r.reserve_id,
        r.member_id,
        m.name as member_name,
        r.room_id,
        r.start_time,
        r.end_time,
        r.status,
        r.created,
        r.remark,
        r.reserve_date,
        CONCAT(r.start_time, ' ~ ', r.end_time) AS oper_time,
        DATE_FORMAT(r.created, '%Y-%m-%d') AS create_dt
        FROM reservation r
        LEFT JOIN members m
        ON r.member_id = m.id
    </select>

    <select id="getAllReservationsByMemberId"  parameterType="int"  resultType="kr.co.wikibook.backend.reservation.model.Reservation">
        SELECT
        r.reserve_id,
        r.member_id,
        m.name as member_name,
        r.room_id,
        r.start_time,
        r.end_time,
        r.status,
        r.created,
        r.remark,
        r.reserve_date,
        DATE_FORMAT(r.created, '%Y-%m-%d') AS create_dt,
        CONCAT(
        DATE_FORMAT(r.reserve_date, '%Y-%m-%d'), ' ',
        DATE_FORMAT(STR_TO_DATE(r.start_time, '%H:%i'), '%p %l:%i'), ' ~ ',
        DATE_FORMAT(STR_TO_DATE(r.end_time, '%H:%i'), '%p %l:%i')
        ) AS oper_time
        FROM reservation r
        LEFT JOIN members m
        ON r.member_id = m.id
        WHERE 1=1
        and member_id = #{memberId}
        ORDER BY r.reserve_date DESC
    </select>

    <select id="getAllReservationsForManager"  parameterType="int"  resultType="kr.co.wikibook.backend.reservation.model.Reservation">
        SELECT
        r.reserve_id,
        r.member_id,
        m.name as member_name,
        r.room_id,
        r.start_time,
        r.end_time,
        r.status,
        r.created,
        r.remark,
        r.reserve_date,
        DATE_FORMAT(r.created, '%Y-%m-%d') AS create_dt,
        CONCAT(
        DATE_FORMAT(r.reserve_date, '%Y-%m-%d'), ' ',
        DATE_FORMAT(STR_TO_DATE(r.start_time, '%H:%i'), '%p %l:%i'), ' ~ ',
        DATE_FORMAT(STR_TO_DATE(r.end_time, '%H:%i'), '%p %l:%i')
        ) AS oper_time
        FROM reservation r
        LEFT JOIN members m
        ON r.member_id = m.id
        WHERE 1=1
        ORDER BY r.reserve_date DESC
    </select>

    <select id="getAllReservationsByRoomId"  parameterType="int"  resultType="kr.co.wikibook.backend.reservation.model.Reservation">
        SELECT
        r.reserve_id,
        r.member_id,
        m.name as member_name,
        r.room_id,
        r.start_time,
        r.end_time,
        r.status,
        r.created,
        r.remark,
        r.reserve_date,
        CONCAT(start_time, ' ~ ', end_time) AS oper_time,
        DATE_FORMAT(r.created, '%Y-%m-%d') AS create_dt
        FROM reservation r
        LEFT JOIN members m
        ON r.member_id = m.id
        WHERE 1=1
        and room_id = #{roomId}
    </select>

    <select id="getReservationById"  parameterType="int"  resultType="kr.co.wikibook.backend.reservation.model.Reservation">
        SELECT
        reserve_id,
        member_id,
        room_id,
        start_time,
        end_time,
        status,
        created,
        remark,
        reserve_date,
        CONCAT(start_time, ' ~ ', end_time) AS oper_time,
        DATE_FORMAT(created, '%Y-%m-%d') AS create_dt
        FROM reservation
        WHERE 1=1
        and reserve_id = #{reserveId}
    </select>

    <insert id="createReservation" parameterType="kr.co.wikibook.backend.reservation.model.Reservation">
        INSERT INTO reservation (
        member_id,
        room_id,
        start_time,
        end_time,
        status,
        remark,
        reserve_date
        ) VALUES (
        #{memberId},
        #{roomId},
        #{startTime},
        #{endTime},
        #{status},
        #{remark},
        #{reserveDate}
        )
    </insert>

    <update id="updateReservation" >
        UPDATE reservation
        SET
        start_time = #{startTime},
        end_time = #{endTime},
        status = #{status},
        remark = #{remark},
        reserve_date = #{reserveDate}
        WHERE 1=1
        AND reserve_id = #{reserveId}
        AND member_id = #{memberId}
    </update>

    <delete id="deleteReservation" >
        delete
        from reservation
        WHERE 1=1
        AND reserve_id = #{reserveId}
        AND member_id = #{memberId}
    </delete>

    <delete id="deleteReservationByMemberId" >
        delete
        from reservation
        WHERE 1=1
        AND member_id = #{memberId}
    </delete>

    <select id="checkIsReserved"   resultType="kr.co.wikibook.backend.reservation.model.Reservation">
        SELECT *
        FROM reservation
        WHERE 1=1
        AND room_id = #{roomId}
        AND reserve_date = #{reserveDate}
        AND (
        start_time 	&lt; #{endTime}
        AND end_time &gt; #{startTime}
        )
    </select>

    <select id="checkIsReservedForUpdate"   resultType="kr.co.wikibook.backend.reservation.model.Reservation">
        SELECT *
        FROM reservation
        WHERE room_id = #{roomId}
        AND reserve_date = #{reserveDate}
        AND start_time 	&lt; #{endTime}
        AND end_time &gt; #{startTime}
        AND reserve_id != #{reserveId}
    </select>

    <select id="checkDuplicate" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM reservation
        WHERE room_id = #{roomId}
        AND reserve_date = #{reserveDate}
        AND (
        (start_time &lt; #{endTime} AND end_time > #{startTime})
        )
    </select>


</mapper>
